name: "Test"

on:
  workflow_dispatch:
  push:

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Python 3.13"
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: "Coverage"
        run: |
          python -m pip install -U pip
          python -m pip install -Ur requirements.txt

      - name: "Ruff"
        uses: astral-sh/ruff-action@v3
        with:
          src: "src"

      - name: "Black"
        uses: psf/black@stable
        with:
          src: "src"

      - name: "Coverage"
        run: |
          coverage run --source=src -m pytest
          coverage xml
          coverage report -m

  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Python 3.11"
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: "Build Dist"
        run: |
          python -m pip install -U pip
          python -m pip install -Ur requirements.txt
          python -m build

      - name: "Debug"
        run: |
          ls -lAh dist

      - name: "Upload to Actions"
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    if: ${{ !contains(github.event.head_commit.message, '#notest') }}
    strategy:
      fail-fast: false
      matrix:
        #version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        version: ["3.10", "3.11"]
    name: "Test ${{ matrix.version }}"
    permissions:
      contents: read

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Download Artifact"
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: "Debug"
        run: |
          ls -lAh dist

      - name: "Setup Python ${{ matrix.version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.version }}
          cache: "pip"

      - name: "Install ${{ matrix.version }}"
        run: |
          python -m pip install -U pip
          python -m pip install dist/actions_tools-*.whl
          #python -m pip install -Ur requirements.txt
          #python -m pip install -e .

      - name: "Test ${{ matrix.version }}"
        run: |
          pytest
