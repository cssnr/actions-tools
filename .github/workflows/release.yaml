name: "Release"

on:
  release:
    types: [published]

jobs:
  build:
    name: "Build"
    uses: ./.github/workflows/build.yaml
    permissions:
      contents: write
    with:
      name: release

  release:
    name: "Release"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    permissions:
      contents: write
      id-token: write
    environment:
      name: ${{ github.event.release.prerelease && 'test' || 'pypi' }}
      url: https://${{ github.event.release.prerelease && 'test.' || '' }}pypi.org/p/actions-tools

    steps:
      - name: "Download Artifact"
        uses: actions/download-artifact@v4
        with:
          name: release
          path: dist

      #- name: "Debug event.json"
      #  if: ${{ always() }}
      #  run: |
      #    cat "${GITHUB_EVENT_PATH}"

      - name: "Debug"
        run: |
          echo name: "${{ github.event.release.prerelease && 'test' || 'pypi' }}"
          echo url: "https://${{ github.event.release.prerelease && 'test.' || '' }}pypi.org/p/actions-tools"
          echo GITHUB_REF_NAME: "${GITHUB_REF_NAME}"
          ls -lAh dist

      - name: "Upload to Release"
        if: ${{ github.event_name == 'release' }}
        uses: svenstaro/upload-release-action@v2
        with:
          overwrite: true
          file_glob: true
          file: dist/*

      - name: "Would run: Test PyPI"
        if: ${{ github.event.release.prerelease }}
        run: |
          echo yes

      ## TODO: Manually publish the package first
      #- name: "Publish to Test PyPI"
      #  if: ${{ github.event.release.prerelease }}
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    repository-url: https://test.pypi.org/legacy/

      - name: "Would run: Official PyPI"
        if: ${{ !github.event.release.prerelease }}
        run: |
          echo yes

      ## TODO: Verify dist and GITHUB_REF_NAME first
      #- name: "Publish to PyPI"
      #  if: ${{ !github.event.release.prerelease }}
      #  uses: pypa/gh-action-pypi-publish@release/v1

      - name: "Update Release Notes"
        run: |
          echo TODO: update release notes with useful shit
