name: "Release"

on:
  release:
    types: [published]

jobs:
  build:
    name: "Build"
    uses: ./.github/workflows/build.yaml
    #permissions:
    #  contents: write
    with:
      name: release

  release:
    name: "Release"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    permissions:
      contents: write
      id-token: write
    environment:
      name: test
      url: https://test.pypi.org/p/actions-tools

    steps:
      #- name: "Debug event.json"
      #  if: ${{ always() }}
      #  run: |
      #    cat "${GITHUB_EVENT_PATH}"

      - name: "Download Artifact"
        uses: actions/download-artifact@v4
        with:
          name: release
          path: dist

      - name: "List Artifacts"
        run: |
          set -e
          echo github.ref_name: "${{ github.ref_name }}"
          ls -lAh dist
          ls dist | grep -- "-${{ github.ref_name }}-" > /dev/null

      - name: "Upload to Release"
        uses: svenstaro/upload-release-action@v2
        with:
          #overwrite: true
          file_glob: true
          file: dist/*

      - name: "Publish to Test PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          attestations: false

      #- name: "Update Release Notes"
      #  run: |
      #    echo update release notes with useful shit

      - name: "Debug Trigger Publish Workflow"
        if: ${{ !github.event.release.prerelease }}
        run: |
          echo ðŸš€ Miles and miles and miles...

      #- name: "Trigger Publish Workflow"
      #  if: ${{ !github.event.release.prerelease }}
      #  uses: benc-uk/workflow-dispatch@v1
      #  with:
      #    workflow: publish.yaml
      #    inputs: '{"tag": "${{ github.ref_name }}"}'

      - name: "Send Failure Notification"
        if: ${{ failure() }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
